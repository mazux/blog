{"version":3,"sources":["svg/logo-github.svg","svg/logo-stackoverflow.svg","components/HeaderMenu.js","components/Main.js","components/ArticlesList.js","components/ProjectsList.js","components/Footer.js","App.js","index.js"],"names":["HeaderMenu","_jsx","Navbar","expand","className","children","_jsxs","Container","Brand","href","Collapse","Text","target","rel","src","GithubLogo","alt","StackOverflowLogo","Main","yearOfExperience","Date","getFullYear","Row","Col","Badge","bg","ArticlesList","CardGroup","Card","Img","variant","Body","class","Footer","Button","ProjectsList","Header","Title","currentYear","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ac5db0cb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-github.3c9c6f36.svg\";","export default __webpack_public_path__ + \"static/media/logo-stackoverflow.649b60ad.svg\";","import Container from \"react-bootstrap/Container\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport GithubLogo from \"../svg/logo-github.svg\";\r\nimport StackOverflowLogo from \"../svg/logo-stackoverflow.svg\";\r\n\r\nfunction HeaderMenu() {\r\n  return (\r\n    <Navbar expand=\"lg\" className=\"bg-body-tertiary bg-light\">\r\n      <Container>\r\n        <Navbar.Brand href=\"/\">MAZEN Kenjrawi | DEV</Navbar.Brand>\r\n\r\n        <Navbar.Collapse className=\"justify-content-end\">\r\n          <Navbar.Text>\r\n            <a href=\"https://github.com/mazux\" target=\"_blank\" rel=\"noreferrer\">\r\n              <img src={GithubLogo} alt=\"Github\" className=\"xs-logo mr-1\" />\r\n            </a>\r\n            <a\r\n              href=\"https://stackoverflow.com/users/3317006/mazux?tab=profile\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              <img\r\n                src={StackOverflowLogo}\r\n                alt=\"StackOverflow\"\r\n                className=\"xs-logo\"\r\n              />\r\n            </a>\r\n          </Navbar.Text>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default HeaderMenu;\r\n","import { Col, Container, Row } from \"react-bootstrap\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\n\r\nfunction Main() {\r\n  var yearOfExperience = new Date().getFullYear() - 2016;\r\n  return (\r\n    <Container className=\"bg-light\">\r\n      <Row>\r\n        <Col>\r\n          <div className=\"card mb-5 mt-5\">\r\n            <div className=\"row g-0\">\r\n              <div className=\"col-md-4\">\r\n                <img\r\n                  src=\"https://avatars.githubusercontent.com/u/14344479?v=4\"\r\n                  className=\"img-fluid\"\r\n                  alt=\"Mazen Kenjrawi\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-8\">\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">Hey there... Welcome!</h5>\r\n                  <p className=\"card-text\">\r\n                    I started this journey in a webstudio in my home country\r\n                    Syria...\r\n                    <br />\r\n                    Now, I have around {yearOfExperience} years of extensive\r\n                    experience in software engineering. My expertise encompasses\r\n                    a profound understanding of fundamental principles and\r\n                    practices.\r\n                  </p>\r\n                  <p>\r\n                    <Badge bg=\"info\">Golang</Badge>\r\n                    <Badge bg=\"info\">Kotlin</Badge>\r\n                    <Badge bg=\"info\">rabbitMQ</Badge>\r\n                    <Badge bg=\"info\">mysql</Badge>\r\n                    <Badge bg=\"info\">postgres</Badge>\r\n                    <Badge bg=\"info\">RESTful API</Badge>\r\n                    <Badge bg=\"info\">gRPC</Badge>\r\n                    <Badge bg=\"info\">TDD</Badge>\r\n                    <Badge bg=\"info\">DDD</Badge>\r\n                  </p>\r\n\r\n                  <p className=\"card-text\">\r\n                    <strong className=\"text-body-secondary\">\r\n                      Mazen Kenjrawi\r\n                    </strong>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import { Col, Container, Row } from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport CardGroup from \"react-bootstrap/CardGroup\";\r\n\r\nfunction ArticlesList() {\r\n  return (\r\n    <Container className=\"articles-list mb-5\">\r\n      <Row>\r\n        <Col>\r\n          <h3 className=\"text-light text-center mt-5\">Articles List</h3>\r\n          <hr className=\"bg-light\" />\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"card-group mb-5\">\r\n        <CardGroup>\r\n          <Card>\r\n            <Card.Img\r\n              variant=\"top\"\r\n              src=\"https://miro.medium.com/v2/resize:fill:400:250/1*ALspCbdlif3un2ULvMglkg.png\"\r\n            />\r\n            <Card.Body>\r\n              <Card.Text>\r\n                <a\r\n                  href=\"https://mazux.medium.com/golang-error-handling-the-neat-way-4b7ec3ac5d6\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  <h5 class=\"card-title\">\r\n                    [Golang] Error Handling, the neat way!\r\n                  </h5>\r\n                  <p class=\"card-text\">\r\n                    I've seen lot's of developers in the golang community,\r\n                    especially who were lately moved to it because of its\r\n                    simplicity, making some quick judgment on how things should\r\n                    be treated in golang. One of these things is error handling.\r\n                    As most of the language current devs are coming from OOPâ€¦\r\n                  </p>\r\n                </a>\r\n              </Card.Text>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <small className=\"text-muted\">3 mins read</small>\r\n            </Card.Footer>\r\n          </Card>\r\n\r\n          <Card>\r\n            <Card.Img\r\n              variant=\"top\"\r\n              src=\"https://miro.medium.com/v2/resize:fill:400:250/1*T0eYy1hAwWxfHNvUiqeX9w.png\"\r\n            />\r\n            <Card.Body>\r\n              <Card.Text>\r\n                <a\r\n                  href=\"https://mazux.medium.com/retry-rabbitmq-messages-using-infrastructure-not-application-with-golang-sample-code-d54c92cd2b1f\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  <h5 class=\"card-title\">\r\n                    Retry rabbitMQ messages using infrastructure not\r\n                    application, with Golang sample code\r\n                  </h5>\r\n                  <p class=\"card-text\">\r\n                    Most likely you encountered the situation in which you have\r\n                    to retry consuming the queue messages for another time due\r\n                    to any kind of temporary issue (e.g: consuming the message\r\n                    requires performing an HTTP call to a service which is\r\n                    facing a temporary outage). I encountered this alot â€” Iâ€¦\r\n                  </p>\r\n                </a>\r\n              </Card.Text>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <small className=\"text-muted\">5 mins read</small>\r\n            </Card.Footer>\r\n          </Card>\r\n        </CardGroup>\r\n      </Row>\r\n      <Row className=\"text-light\">\r\n        <Col>\r\n          <Button\r\n            variant=\"secondary\"\r\n            href=\"https://medium.com/@mazux\"\r\n            target=\"_blank\"\r\n          >\r\n            For more checkout my medium\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ArticlesList;\r\n","import { Col, Container, Row } from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nfunction ProjectsList() {\r\n  return (\r\n    <Container className=\"projects-list mb-5\">\r\n      <Row>\r\n        <Col>\r\n          <h3 className=\"text-light text-center mt-5\">Projects List</h3>\r\n          <hr className=\"bg-light\" />\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-5\">\r\n        <Col>\r\n          <Card className=\"text-center mb-3\">\r\n            <Card.Header>autodlq</Card.Header>\r\n            <Card.Body>\r\n              <Card.Title>Auto DLQ</Card.Title>\r\n              <Card.Text>\r\n                Lightweight package in golang to declare a DLQ to you rabbitMQ\r\n                queue and apply a fixed-time retryable mechanism on its\r\n                messages.\r\n                <br />\r\n                it depends on{\" \"}\r\n                <a\r\n                  href=\"https://github.com/streadway/amqp\"\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  streadway/amqp\r\n                </a>{\" \"}\r\n                a Go client for AMQP 0.9.1\r\n              </Card.Text>\r\n              <Button\r\n                variant=\"dark\"\r\n                href=\"https://github.com/mazux/autodlq\"\r\n                target=\"_blank\"\r\n              >\r\n                Check it on github\r\n              </Button>\r\n            </Card.Body>\r\n          </Card>\r\n          <Card className=\"text-center mb-3\">\r\n            <Card.Header>pwd</Card.Header>\r\n            <Card.Body>\r\n              <Card.Title>CLI Password Manger</Card.Title>\r\n              <Card.Text>\r\n                Simple open-source lightweight password manager in golang.\r\n                <br />\r\n                It's written while embracing the{\" \"}\r\n                <a\r\n                  href=\"https://en.wikipedia.org/wiki/Command%E2%80%93query_separation\"\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  CQS design\r\n                </a>{\" \"}\r\n                to separate the code base into different layers (domain,\r\n                application, presentation) in which the domain layer is the\r\n                lower layer and all other layers are dependent on it\r\n              </Card.Text>\r\n              <Button\r\n                variant=\"dark\"\r\n                href=\"https://github.com/mazux/pwd\"\r\n                target=\"_blank\"\r\n              >\r\n                Check it on github\r\n              </Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"text-light\">\r\n        <Col>\r\n          <Button\r\n            variant=\"secondary\"\r\n            href=\"https://github.com/mazux\"\r\n            target=\"_blank\"\r\n          >\r\n            For more checkout my github\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ProjectsList;\r\n","function Footer() {\r\n  var currentYear = new Date().getFullYear();\r\n  return (\r\n    <footer className=\"text-light text-center mb-3\">\r\n      Copy right reserverd &copy;{currentYear}\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nimport \"./App.css\";\r\nimport HeaderMenu from \"./components/HeaderMenu\";\r\nimport Main from \"./components/Main\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport ArticlesList from \"./components/ArticlesList\";\r\nimport ProjectsList from \"./components/ProjectsList\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nconst App = () => (\r\n  <Container>\r\n    <div className=\"invisible\">\r\n      <h1>Mazen Kenjrawi | DEV</h1>\r\n    </div>\r\n    <HeaderMenu />\r\n    <Main />\r\n    <ArticlesList />\r\n    <ProjectsList />\r\n    <Footer />\r\n  </Container>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n// Importing the Bootstrap CSS\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}